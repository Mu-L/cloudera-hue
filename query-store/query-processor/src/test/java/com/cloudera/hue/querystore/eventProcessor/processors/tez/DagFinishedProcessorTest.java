// (c) Copyright 2020-2021 Cloudera, Inc. All rights reserved.
package com.cloudera.hue.querystore.eventProcessor.processors.tez;

import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Optional;

import javax.inject.Provider;

import org.apache.hadoop.fs.Path;
import org.apache.hadoop.hive.ql.hooks.HiveProtoLoggingHook;
import org.apache.tez.common.ATSConstants;
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import com.cloudera.hue.querystore.common.dto.CounterGroup;
import com.cloudera.hue.querystore.common.entities.HiveQueryBasicInfo;
import com.cloudera.hue.querystore.common.entities.TezDagBasicInfo;
import com.cloudera.hue.querystore.common.entities.TezDagExtendedInfo;
import com.cloudera.hue.querystore.common.repository.HiveQueryBasicInfoRepository;
import com.cloudera.hue.querystore.common.repository.TezDagBasicInfoRepository;
import com.cloudera.hue.querystore.common.repository.TezDagExtendedInfoRepository;
import com.cloudera.hue.querystore.eventProcessor.eventdefs.TezHSEvent;
import com.cloudera.hue.querystore.eventProcessor.processors.ProcessingStatus;
import com.cloudera.hue.querystore.eventProcessor.processors.util.ProcessorHelper;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ArrayNode;

public class DagFinishedProcessorTest {

  @Mock Provider<TezDagBasicInfoRepository> dagInfoRepositoryProvider;
  @Mock Provider<HiveQueryBasicInfoRepository> hiveQueryRepositoryProvider;
  @Mock Provider<TezDagExtendedInfoRepository> dagDetailsRepositoryProvider;
  @Mock TezDagBasicInfoRepository dagInfoRepository;
  @Mock HiveQueryBasicInfoRepository hiveQueryRepository;
  @Mock TezDagExtendedInfoRepository dagDetailsRepository;

  ObjectMapper objectMapper = new ObjectMapper();
  ProcessorHelper helper = new ProcessorHelper(objectMapper);
  DagFinishedProcessor dagFinishedProcessor = null;

  @Before
  public void setUp() throws Exception {
    MockitoAnnotations.initMocks(this);
    when(dagInfoRepositoryProvider.get()).thenReturn(dagInfoRepository);
    when(dagDetailsRepositoryProvider.get()).thenReturn(dagDetailsRepository);
    when(hiveQueryRepositoryProvider.get()).thenReturn(hiveQueryRepository);

    dagFinishedProcessor = new DagFinishedProcessor(helper,
        dagInfoRepositoryProvider,
        dagDetailsRepositoryProvider,
        hiveQueryRepositoryProvider,
        objectMapper
    );
  }

  @After
  public void tearDown() throws Exception {
  }

  @Test
  public void processValidEvent_DagInfoNotFound(){
    String dagId = "Some-Dag-Id";
    Path filePath = new Path("/path");
    TezHSEvent tezHSEvent = new TezHSEvent();
    tezHSEvent.setDagId(dagId);
    when(dagInfoRepository.findByDagId(dagId)).thenReturn(Optional.empty());
    ProcessingStatus processingStatus = dagFinishedProcessor.processValidEvent(tezHSEvent, filePath);
    String errorMsg = "Dag Info not found for dagId: " + dagId;
    Assert.assertEquals("Status was not error even when DagInfo not found.",
        ProcessingStatus.Status.ERROR, processingStatus.getStatus());
    Assert.assertNotNull("Error was not set event when DagInfo not found.", processingStatus.getError());
    Assert.assertTrue("Error instance was not of type RuntimeException.",
        processingStatus.getError() instanceof RuntimeException);
    Assert.assertEquals("Error message incorrect.", errorMsg, processingStatus.getError().getMessage());
  }


  @Test
  public void processValidEvent() {
    String dagId = "Some-Dag-Id";
    Map<String, String> otherInfo = new HashMap<>();
    otherInfo.put(ATSConstants.STATUS, TezDagBasicInfo.Status.SUCCEEDED.name());

    String countersJson = "{\"counterGroups\":[{\"counterGroupName\":\"org.apache.tez.common.counters.DAGCounter\",\"counters\":[{\"counterName\":\"NUM_SUCCEEDED_TASKS\",\"counterValue\":2},{\"counterName\":\"TOTAL_LAUNCHED_TASKS\",\"counterValue\":2},{\"counterName\":\"DATA_LOCAL_TASKS\",\"counterValue\":1},{\"counterName\":\"AM_CPU_MILLISECONDS\",\"counterValue\":140},{\"counterName\":\"AM_GC_TIME_MILLIS\",\"counterValue\":58}]},{\"counterGroupName\":\"org.apache.tez.common.counters.FileSystemCounter\",\"counterGroupDisplayName\":\"File System Counters\",\"counters\":[{\"counterName\":\"FILE_BYTES_WRITTEN\",\"counterValue\":59},{\"counterName\":\"HDFS_BYTES_WRITTEN\",\"counterValue\":105},{\"counterName\":\"HDFS_READ_OPS\",\"counterValue\":2},{\"counterName\":\"HDFS_WRITE_OPS\",\"counterValue\":2}]},{\"counterGroupName\":\"org.apache.tez.common.counters.TaskCounter\",\"counters\":[{\"counterName\":\"REDUCE_INPUT_GROUPS\",\"counterValue\":1},{\"counterName\":\"REDUCE_INPUT_RECORDS\",\"counterValue\":1},{\"counterName\":\"SPILLED_RECORDS\",\"counterValue\":2},{\"counterName\":\"NUM_SHUFFLED_INPUTS\",\"counterValue\":1},{\"counterName\":\"MERGED_MAP_OUTPUTS\",\"counterValue\":1},{\"counterName\":\"INPUT_RECORDS_PROCESSED\",\"counterValue\":49},{\"counterName\":\"INPUT_SPLIT_LENGTH_BYTES\",\"counterValue\":650355},{\"counterName\":\"OUTPUT_RECORDS\",\"counterValue\":1},{\"counterName\":\"OUTPUT_BYTES\",\"counterValue\":5},{\"counterName\":\"OUTPUT_BYTES_WITH_OVERHEAD\",\"counterValue\":13},{\"counterName\":\"OUTPUT_BYTES_PHYSICAL\",\"counterValue\":27},{\"counterName\":\"ADDITIONAL_SPILLS_BYTES_READ\",\"counterValue\":27},{\"counterName\":\"SHUFFLE_CHUNK_COUNT\",\"counterValue\":1},{\"counterName\":\"SHUFFLE_BYTES\",\"counterValue\":27},{\"counterName\":\"SHUFFLE_BYTES_DECOMPRESSED\",\"counterValue\":13},{\"counterName\":\"SHUFFLE_BYTES_DISK_DIRECT\",\"counterValue\":27},{\"counterName\":\"SHUFFLE_PHASE_TIME\",\"counterValue\":104},{\"counterName\":\"MERGE_PHASE_TIME\",\"counterValue\":105},{\"counterName\":\"FIRST_EVENT_RECEIVED\",\"counterValue\":45},{\"counterName\":\"LAST_EVENT_RECEIVED\",\"counterValue\":45}]},{\"counterGroupName\":\"HIVE\",\"counters\":[{\"counterName\":\"CREATED_FILES\",\"counterValue\":1},{\"counterName\":\"RECORDS_IN_Map_1\",\"counterValue\":50000},{\"counterName\":\"RECORDS_OUT_0\",\"counterValue\":1},{\"counterName\":\"RECORDS_OUT_INTERMEDIATE_Map_1\",\"counterValue\":1}]},{\"counterGroupName\":\"TaskCounter_Map_1_INPUT_customer_address\",\"counters\":[{\"counterName\":\"INPUT_RECORDS_PROCESSED\",\"counterValue\":49},{\"counterName\":\"INPUT_SPLIT_LENGTH_BYTES\",\"counterValue\":650355}]},{\"counterGroupName\":\"TaskCounter_Map_1_OUTPUT_Reducer_2\",\"counters\":[{\"counterName\":\"OUTPUT_BYTES\",\"counterValue\":5},{\"counterName\":\"OUTPUT_BYTES_PHYSICAL\",\"counterValue\":27},{\"counterName\":\"OUTPUT_BYTES_WITH_OVERHEAD\",\"counterValue\":13},{\"counterName\":\"OUTPUT_RECORDS\",\"counterValue\":1},{\"counterName\":\"SHUFFLE_CHUNK_COUNT\",\"counterValue\":1},{\"counterName\":\"SPILLED_RECORDS\",\"counterValue\":1}]},{\"counterGroupName\":\"TaskCounter_Reducer_2_INPUT_Map_1\",\"counters\":[{\"counterName\":\"ADDITIONAL_SPILLS_BYTES_READ\",\"counterValue\":27},{\"counterName\":\"FIRST_EVENT_RECEIVED\",\"counterValue\":45},{\"counterName\":\"LAST_EVENT_RECEIVED\",\"counterValue\":45},{\"counterName\":\"MERGED_MAP_OUTPUTS\",\"counterValue\":1},{\"counterName\":\"MERGE_PHASE_TIME\",\"counterValue\":105},{\"counterName\":\"NUM_SHUFFLED_INPUTS\",\"counterValue\":1},{\"counterName\":\"REDUCE_INPUT_GROUPS\",\"counterValue\":1},{\"counterName\":\"REDUCE_INPUT_RECORDS\",\"counterValue\":1},{\"counterName\":\"SHUFFLE_BYTES\",\"counterValue\":27},{\"counterName\":\"SHUFFLE_BYTES_DECOMPRESSED\",\"counterValue\":13},{\"counterName\":\"SHUFFLE_BYTES_DISK_DIRECT\",\"counterValue\":27},{\"counterName\":\"SHUFFLE_PHASE_TIME\",\"counterValue\":104},{\"counterName\":\"SPILLED_RECORDS\",\"counterValue\":1}]},{\"counterGroupName\":\"org.apache.hadoop.hive.llap.counters.LlapIOCounters\",\"counters\":[{\"counterName\":\"CONSUMER_TIME_NS\",\"counterValue\":62513},{\"counterName\":\"DECODE_TIME_NS\",\"counterValue\":40956},{\"counterName\":\"HDFS_TIME_NS\",\"counterValue\":12858},{\"counterName\":\"METADATA_CACHE_HIT\",\"counterValue\":2},{\"counterName\":\"NUM_DECODED_BATCHES\",\"counterValue\":1},{\"counterName\":\"NUM_VECTOR_BATCHES\",\"counterValue\":49},{\"counterName\":\"ROWS_EMITTED\",\"counterValue\":50000},{\"counterName\":\"SELECTED_ROWGROUPS\",\"counterValue\":5},{\"counterName\":\"TOTAL_IO_TIME_NS\",\"counterValue\":159765}]}]}";
    otherInfo.put(ATSConstants.COUNTERS, countersJson);
    Path filePath = new Path("/path");
    TezHSEvent tezHSEvent = new TezHSEvent();
    tezHSEvent.setEventType("DAG_FINISHED");
    tezHSEvent.setEventTime(1521105062424L);
    tezHSEvent.setDagId(dagId);
    tezHSEvent.setOtherInfo(otherInfo);
    TezDagBasicInfo dagInfo = new TezDagBasicInfo();
    HiveQueryBasicInfo hiveQuery = new HiveQueryBasicInfo();
    Long hiveQueryId = 1l;
    hiveQuery.setId(hiveQueryId);
    hiveQuery.setExecutionMode(HiveProtoLoggingHook.ExecutionMode.LLAP.name());
    dagInfo.setHiveQueryId(hiveQueryId);
    when(dagInfoRepository.findByDagId(dagId)).thenReturn(Optional.ofNullable(dagInfo));
    when(hiveQueryRepository.findOne(hiveQueryId)).thenReturn(Optional.ofNullable(hiveQuery));
    TezDagExtendedInfo dagDetails = new TezDagExtendedInfo();
    when(dagDetailsRepository.findByDagId(dagId)).thenReturn(Optional.of(dagDetails));
    ProcessingStatus processingStatus = dagFinishedProcessor.processValidEvent(tezHSEvent, filePath);

    Assert.assertEquals(Long.valueOf(1521105062424L), hiveQuery.getEndTime());
    Assert.assertEquals(Long.valueOf(0l), hiveQuery.getCpuTime());
    Assert.assertEquals(Long.valueOf(0l), hiveQuery.getPhysicalMemory());
    Assert.assertEquals(Long.valueOf(0l), hiveQuery.getVirtualMemory());
    Assert.assertEquals(Long.valueOf(105l), hiveQuery.getDataRead());
    Assert.assertEquals(Long.valueOf(0l), hiveQuery.getDataWritten());
    Assert.assertEquals(Long.valueOf(140), hiveQuery.getResourceUtilization());

    verify(hiveQueryRepository, times(1)).save(hiveQuery);
    verify(dagDetailsRepository, times(1)).save(dagDetails);
    Assert.assertEquals("Status was not finished even when event processed successfully.",
        ProcessingStatus.Status.FINISH, processingStatus.getStatus());
  }

  @Test
  public void testResourceUtilizationUpdationForExecutionModeTez() throws IOException {
    HiveQueryBasicInfo hiveQuery = new HiveQueryBasicInfo();
    hiveQuery.setExecutionMode(HiveProtoLoggingHook.ExecutionMode.TEZ.name());
    String jsonCounters = "[{\"counters\": [{\"counterName\": \"NUM_SUCCEEDED_TASKS\", \"counterValue\": 2, \"counterMaxValue\": 2, \"counterMinValue\": 2, \"counterInstanceCount\": 1}, {\"counterName\": \"TOTAL_LAUNCHED_TASKS\", \"counterValue\": 2, \"counterMaxValue\": 2, \"counterMinValue\": 2, \"counterInstanceCount\": 1}, {\"counterName\": \"RACK_LOCAL_TASKS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"AM_CPU_MILLISECONDS\", \"counterValue\": 3790, \"counterMaxValue\": 3790, \"counterMinValue\": 3790, \"counterInstanceCount\": 1}], \"counterGroupName\": \"org.apache.tez.common.counters.DAGCounter\"}, {\"counters\": [{\"counterName\": \"FILE_BYTES_READ\", \"counterValue\": 94, \"counterMaxValue\": 94, \"counterMinValue\": 94, \"counterInstanceCount\": 1}, {\"counterName\": \"FILE_BYTES_WRITTEN\", \"counterValue\": 94, \"counterMaxValue\": 94, \"counterMinValue\": 94, \"counterInstanceCount\": 1}, {\"counterName\": \"HDFS_BYTES_WRITTEN\", \"counterValue\": 971, \"counterMaxValue\": 804, \"counterMinValue\": 167, \"counterInstanceCount\": 2}, {\"counterName\": \"HDFS_READ_OPS\", \"counterValue\": 8, \"counterMaxValue\": 5, \"counterMinValue\": 3, \"counterInstanceCount\": 2}, {\"counterName\": \"HDFS_WRITE_OPS\", \"counterValue\": 6, \"counterMaxValue\": 4, \"counterMinValue\": 2, \"counterInstanceCount\": 2}, {\"counterName\": \"HDFS_OP_CREATE\", \"counterValue\": 4, \"counterMaxValue\": 3, \"counterMinValue\": 1, \"counterInstanceCount\": 2}, {\"counterName\": \"HDFS_OP_GET_FILE_STATUS\", \"counterValue\": 8, \"counterMaxValue\": 5, \"counterMinValue\": 3, \"counterInstanceCount\": 2}, {\"counterName\": \"HDFS_OP_RENAME\", \"counterValue\": 2, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 2}], \"counterGroupName\": \"org.apache.tez.common.counters.FileSystemCounter\", \"counterGroupDisplayName\": \"File System Counters\"}, {\"counters\": [{\"counterName\": \"NUM_SHUFFLED_INPUTS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"GC_TIME_MILLIS\", \"counterValue\": 67, \"counterMaxValue\": 67, \"counterMinValue\": 0, \"counterInstanceCount\": 2}, {\"counterName\": \"TASK_DURATION_MILLIS\", \"counterValue\": 2444, \"counterMaxValue\": 2227, \"counterMinValue\": 217, \"counterInstanceCount\": 2}, {\"counterName\": \"CPU_MILLISECONDS\", \"counterValue\": 6980, \"counterMaxValue\": 6440, \"counterMinValue\": 540, \"counterInstanceCount\": 2}, {\"counterName\": \"PHYSICAL_MEMORY_BYTES\", \"counterValue\": 4294967296, \"counterMaxValue\": 2147483648, \"counterMinValue\": 2147483648, \"counterInstanceCount\": 2}, {\"counterName\": \"VIRTUAL_MEMORY_BYTES\", \"counterValue\": 10933641216, \"counterMaxValue\": 5467869184, \"counterMinValue\": 5465772032, \"counterInstanceCount\": 2}, {\"counterName\": \"COMMITTED_HEAP_BYTES\", \"counterValue\": 4294967296, \"counterMaxValue\": 2147483648, \"counterMinValue\": 2147483648, \"counterInstanceCount\": 2}, {\"counterName\": \"INPUT_RECORDS_PROCESSED\", \"counterValue\": 5, \"counterMaxValue\": 4, \"counterMinValue\": 1, \"counterInstanceCount\": 2}, {\"counterName\": \"INPUT_SPLIT_LENGTH_BYTES\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_RECORDS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 0, \"counterInstanceCount\": 2}, {\"counterName\": \"OUTPUT_BYTES\", \"counterValue\": 58, \"counterMaxValue\": 58, \"counterMinValue\": 58, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_BYTES_WITH_OVERHEAD\", \"counterValue\": 66, \"counterMaxValue\": 66, \"counterMinValue\": 66, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_BYTES_PHYSICAL\", \"counterValue\": 86, \"counterMaxValue\": 86, \"counterMinValue\": 86, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 62, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES_DECOMPRESSED\", \"counterValue\": 66, \"counterMaxValue\": 66, \"counterMinValue\": 66, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES_DISK_DIRECT\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 62, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_PHASE_TIME\", \"counterValue\": 43, \"counterMaxValue\": 43, \"counterMinValue\": 43, \"counterInstanceCount\": 1}, {\"counterName\": \"FIRST_EVENT_RECEIVED\", \"counterValue\": 27, \"counterMaxValue\": 27, \"counterMinValue\": 27, \"counterInstanceCount\": 1}, {\"counterName\": \"LAST_EVENT_RECEIVED\", \"counterValue\": 27, \"counterMaxValue\": 27, \"counterMinValue\": 27, \"counterInstanceCount\": 1}], \"counterGroupName\": \"org.apache.tez.common.counters.TaskCounter\"}, {\"counters\": [{\"counterName\": \"CREATED_FILES\", \"counterValue\": 2, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 2}, {\"counterName\": \"RECORDS_IN_Map_1\", \"counterValue\": 3, \"counterMaxValue\": 3, \"counterMinValue\": 3, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_0\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_1_database2.table1\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_INTERMEDIATE_Map_1\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_FS_11\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_FS_4\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_GBY_7\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_GBY_9\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_RS_8\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_SEL_1\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_SEL_3\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_SEL_6\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_TS_0\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_UDTF_2\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}], \"counterGroupName\": \"HIVE\"}, {\"counters\": [{\"counterName\": \"INPUT_RECORDS_PROCESSED\", \"counterValue\": 4, \"counterMaxValue\": 4, \"counterMinValue\": 4, \"counterInstanceCount\": 1}, {\"counterName\": \"INPUT_SPLIT_LENGTH_BYTES\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}], \"counterGroupName\": \"TaskCounter_Map_1_INPUT__dummy_table\"}, {\"counters\": [{\"counterName\": \"OUTPUT_BYTES\", \"counterValue\": 58, \"counterMaxValue\": 58, \"counterMinValue\": 58, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_BYTES_PHYSICAL\", \"counterValue\": 86, \"counterMaxValue\": 86, \"counterMinValue\": 86, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_BYTES_WITH_OVERHEAD\", \"counterValue\": 66, \"counterMaxValue\": 66, \"counterMinValue\": 66, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_RECORDS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}], \"counterGroupName\": \"TaskCounter_Map_1_OUTPUT_Reducer_2\"}, {\"counters\": [{\"counterName\": \"FIRST_EVENT_RECEIVED\", \"counterValue\": 27, \"counterMaxValue\": 27, \"counterMinValue\": 27, \"counterInstanceCount\": 1}, {\"counterName\": \"INPUT_RECORDS_PROCESSED\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"LAST_EVENT_RECEIVED\", \"counterValue\": 27, \"counterMaxValue\": 27, \"counterMinValue\": 27, \"counterInstanceCount\": 1}, {\"counterName\": \"NUM_SHUFFLED_INPUTS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 62, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES_DECOMPRESSED\", \"counterValue\": 66, \"counterMaxValue\": 66, \"counterMinValue\": 66, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES_DISK_DIRECT\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 62, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_PHASE_TIME\", \"counterValue\": 43, \"counterMaxValue\": 43, \"counterMinValue\": 43, \"counterInstanceCount\": 1}], \"counterGroupName\": \"TaskCounter_Reducer_2_INPUT_Map_1\"}]";
    JsonNode counters = objectMapper.readTree(jsonCounters);
    Map<String, CounterGroup> counterGroupMap = dagFinishedProcessor.getCounterGroupMap((ArrayNode)counters);
    dagFinishedProcessor.updateResourceUtilizationInHiveQuery(counterGroupMap, hiveQuery);
    Assert.assertEquals(10770L, hiveQuery.getResourceUtilization().longValue());
  }

  @Test
  public void testResourceUtilizationUpdationForExecutionModeLLAP() throws IOException {
    HiveQueryBasicInfo hiveQuery = new HiveQueryBasicInfo();
    hiveQuery.setExecutionMode(HiveProtoLoggingHook.ExecutionMode.LLAP.name());
    String jsonCounters = "[{\"counters\": [{\"counterName\": \"NUM_SUCCEEDED_TASKS\", \"counterValue\": 2, \"counterMaxValue\": 2, \"counterMinValue\": 2, \"counterInstanceCount\": 1}, {\"counterName\": \"TOTAL_LAUNCHED_TASKS\", \"counterValue\": 2, \"counterMaxValue\": 2, \"counterMinValue\": 2, \"counterInstanceCount\": 1}, {\"counterName\": \"RACK_LOCAL_TASKS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"AM_CPU_MILLISECONDS\", \"counterValue\": 150, \"counterMaxValue\": 150, \"counterMinValue\": 150, \"counterInstanceCount\": 1}], \"counterGroupName\": \"org.apache.tez.common.counters.DAGCounter\"}, {\"counters\": [{\"counterName\": \"FILE_BYTES_READ\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 0, \"counterInstanceCount\": 2}, {\"counterName\": \"FILE_BYTES_WRITTEN\", \"counterValue\": 94, \"counterMaxValue\": 94, \"counterMinValue\": 0, \"counterInstanceCount\": 2}, {\"counterName\": \"HDFS_BYTES_WRITTEN\", \"counterValue\": 972, \"counterMaxValue\": 805, \"counterMinValue\": 167, \"counterInstanceCount\": 2}, {\"counterName\": \"HDFS_READ_OPS\", \"counterValue\": 8, \"counterMaxValue\": 5, \"counterMinValue\": 3, \"counterInstanceCount\": 2}, {\"counterName\": \"HDFS_WRITE_OPS\", \"counterValue\": 6, \"counterMaxValue\": 4, \"counterMinValue\": 2, \"counterInstanceCount\": 2}], \"counterGroupName\": \"org.apache.tez.common.counters.FileSystemCounter\", \"counterGroupDisplayName\": \"File System Counters\"}, {\"counters\": [{\"counterName\": \"NUM_SHUFFLED_INPUTS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"TASK_DURATION_MILLIS\", \"counterValue\": 412, \"counterMaxValue\": 207, \"counterMinValue\": 205, \"counterInstanceCount\": 2}, {\"counterName\": \"INPUT_RECORDS_PROCESSED\", \"counterValue\": 5, \"counterMaxValue\": 4, \"counterMinValue\": 1, \"counterInstanceCount\": 2}, {\"counterName\": \"INPUT_SPLIT_LENGTH_BYTES\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_RECORDS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 0, \"counterInstanceCount\": 2}, {\"counterName\": \"OUTPUT_BYTES\", \"counterValue\": 58, \"counterMaxValue\": 58, \"counterMinValue\": 58, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_BYTES_WITH_OVERHEAD\", \"counterValue\": 66, \"counterMaxValue\": 66, \"counterMinValue\": 66, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_BYTES_PHYSICAL\", \"counterValue\": 86, \"counterMaxValue\": 86, \"counterMinValue\": 86, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 62, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES_DECOMPRESSED\", \"counterValue\": 66, \"counterMaxValue\": 66, \"counterMinValue\": 66, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES_DISK_DIRECT\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 62, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_PHASE_TIME\", \"counterValue\": 14, \"counterMaxValue\": 14, \"counterMinValue\": 14, \"counterInstanceCount\": 1}, {\"counterName\": \"FIRST_EVENT_RECEIVED\", \"counterValue\": 8, \"counterMaxValue\": 8, \"counterMinValue\": 8, \"counterInstanceCount\": 1}, {\"counterName\": \"LAST_EVENT_RECEIVED\", \"counterValue\": 8, \"counterMaxValue\": 8, \"counterMinValue\": 8, \"counterInstanceCount\": 1}], \"counterGroupName\": \"org.apache.tez.common.counters.TaskCounter\"}, {\"counters\": [{\"counterName\": \"CREATED_FILES\", \"counterValue\": 2, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 2}, {\"counterName\": \"RECORDS_IN_Map_1\", \"counterValue\": 3, \"counterMaxValue\": 3, \"counterMinValue\": 3, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_0\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_1_database2.table1\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_INTERMEDIATE_Map_1\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_FS_11\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_FS_4\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_GBY_7\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_GBY_9\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_RS_8\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_SEL_1\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_SEL_3\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_SEL_6\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_TS_0\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_UDTF_2\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}], \"counterGroupName\": \"HIVE\"}, {\"counters\": [{\"counterName\": \"INPUT_RECORDS_PROCESSED\", \"counterValue\": 4, \"counterMaxValue\": 4, \"counterMinValue\": 4, \"counterInstanceCount\": 1}, {\"counterName\": \"INPUT_SPLIT_LENGTH_BYTES\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}], \"counterGroupName\": \"TaskCounter_Map_1_INPUT__dummy_table\"}, {\"counters\": [{\"counterName\": \"OUTPUT_BYTES\", \"counterValue\": 58, \"counterMaxValue\": 58, \"counterMinValue\": 58, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_BYTES_PHYSICAL\", \"counterValue\": 86, \"counterMaxValue\": 86, \"counterMinValue\": 86, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_BYTES_WITH_OVERHEAD\", \"counterValue\": 66, \"counterMaxValue\": 66, \"counterMinValue\": 66, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_RECORDS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}], \"counterGroupName\": \"TaskCounter_Map_1_OUTPUT_Reducer_2\"}, {\"counters\": [{\"counterName\": \"FIRST_EVENT_RECEIVED\", \"counterValue\": 8, \"counterMaxValue\": 8, \"counterMinValue\": 8, \"counterInstanceCount\": 1}, {\"counterName\": \"INPUT_RECORDS_PROCESSED\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"LAST_EVENT_RECEIVED\", \"counterValue\": 8, \"counterMaxValue\": 8, \"counterMinValue\": 8, \"counterInstanceCount\": 1}, {\"counterName\": \"NUM_SHUFFLED_INPUTS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 62, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES_DECOMPRESSED\", \"counterValue\": 66, \"counterMaxValue\": 66, \"counterMinValue\": 66, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES_DISK_DIRECT\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 62, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_PHASE_TIME\", \"counterValue\": 14, \"counterMaxValue\": 14, \"counterMinValue\": 14, \"counterInstanceCount\": 1}], \"counterGroupName\": \"TaskCounter_Reducer_2_INPUT_Map_1\"}, {\"counters\": [{\"counterName\": \"SPECULATIVE_QUEUED_NS\", \"counterValue\": 229038, \"counterMaxValue\": 115367, \"counterMinValue\": 113671, \"counterInstanceCount\": 2}, {\"counterName\": \"SPECULATIVE_RUNNING_NS\", \"counterValue\": 404437250, \"counterMaxValue\": 203208422, \"counterMinValue\": 201228828, \"counterInstanceCount\": 2}], \"counterGroupName\": \"org.apache.hadoop.hive.llap.counters.LlapWmCounters\"}]";
    JsonNode counters = objectMapper.readTree(jsonCounters);
    Map<String, CounterGroup> counterGroupMap = dagFinishedProcessor.getCounterGroupMap((ArrayNode)counters);
    dagFinishedProcessor.updateResourceUtilizationInHiveQuery(counterGroupMap, hiveQuery);
    Assert.assertEquals(554L, hiveQuery.getResourceUtilization().longValue());
  }

  @Test
  public void testResourceUtilizationUpdationForExecutionModeNull() throws IOException {
    HiveQueryBasicInfo hiveQuery = new HiveQueryBasicInfo();

    String jsonCounters = "[{\"counters\": [{\"counterName\": \"NUM_SUCCEEDED_TASKS\", \"counterValue\": 2, \"counterMaxValue\": 2, \"counterMinValue\": 2, \"counterInstanceCount\": 1}, {\"counterName\": \"TOTAL_LAUNCHED_TASKS\", \"counterValue\": 2, \"counterMaxValue\": 2, \"counterMinValue\": 2, \"counterInstanceCount\": 1}, {\"counterName\": \"RACK_LOCAL_TASKS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"AM_CPU_MILLISECONDS\", \"counterValue\": 150, \"counterMaxValue\": 150, \"counterMinValue\": 150, \"counterInstanceCount\": 1}], \"counterGroupName\": \"org.apache.tez.common.counters.DAGCounter\"}, {\"counters\": [{\"counterName\": \"FILE_BYTES_READ\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 0, \"counterInstanceCount\": 2}, {\"counterName\": \"FILE_BYTES_WRITTEN\", \"counterValue\": 94, \"counterMaxValue\": 94, \"counterMinValue\": 0, \"counterInstanceCount\": 2}, {\"counterName\": \"HDFS_BYTES_WRITTEN\", \"counterValue\": 972, \"counterMaxValue\": 805, \"counterMinValue\": 167, \"counterInstanceCount\": 2}, {\"counterName\": \"HDFS_READ_OPS\", \"counterValue\": 8, \"counterMaxValue\": 5, \"counterMinValue\": 3, \"counterInstanceCount\": 2}, {\"counterName\": \"HDFS_WRITE_OPS\", \"counterValue\": 6, \"counterMaxValue\": 4, \"counterMinValue\": 2, \"counterInstanceCount\": 2}], \"counterGroupName\": \"org.apache.tez.common.counters.FileSystemCounter\", \"counterGroupDisplayName\": \"File System Counters\"}, {\"counters\": [{\"counterName\": \"NUM_SHUFFLED_INPUTS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"TASK_DURATION_MILLIS\", \"counterValue\": 412, \"counterMaxValue\": 207, \"counterMinValue\": 205, \"counterInstanceCount\": 2}, {\"counterName\": \"INPUT_RECORDS_PROCESSED\", \"counterValue\": 5, \"counterMaxValue\": 4, \"counterMinValue\": 1, \"counterInstanceCount\": 2}, {\"counterName\": \"INPUT_SPLIT_LENGTH_BYTES\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_RECORDS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 0, \"counterInstanceCount\": 2}, {\"counterName\": \"OUTPUT_BYTES\", \"counterValue\": 58, \"counterMaxValue\": 58, \"counterMinValue\": 58, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_BYTES_WITH_OVERHEAD\", \"counterValue\": 66, \"counterMaxValue\": 66, \"counterMinValue\": 66, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_BYTES_PHYSICAL\", \"counterValue\": 86, \"counterMaxValue\": 86, \"counterMinValue\": 86, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 62, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES_DECOMPRESSED\", \"counterValue\": 66, \"counterMaxValue\": 66, \"counterMinValue\": 66, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES_DISK_DIRECT\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 62, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_PHASE_TIME\", \"counterValue\": 14, \"counterMaxValue\": 14, \"counterMinValue\": 14, \"counterInstanceCount\": 1}, {\"counterName\": \"FIRST_EVENT_RECEIVED\", \"counterValue\": 8, \"counterMaxValue\": 8, \"counterMinValue\": 8, \"counterInstanceCount\": 1}, {\"counterName\": \"LAST_EVENT_RECEIVED\", \"counterValue\": 8, \"counterMaxValue\": 8, \"counterMinValue\": 8, \"counterInstanceCount\": 1}], \"counterGroupName\": \"org.apache.tez.common.counters.TaskCounter\"}, {\"counters\": [{\"counterName\": \"CREATED_FILES\", \"counterValue\": 2, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 2}, {\"counterName\": \"RECORDS_IN_Map_1\", \"counterValue\": 3, \"counterMaxValue\": 3, \"counterMinValue\": 3, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_0\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_1_database2.table1\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_INTERMEDIATE_Map_1\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_FS_11\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_FS_4\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_GBY_7\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_GBY_9\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_RS_8\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_SEL_1\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_SEL_3\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_SEL_6\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_TS_0\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"RECORDS_OUT_OPERATOR_UDTF_2\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}], \"counterGroupName\": \"HIVE\"}, {\"counters\": [{\"counterName\": \"INPUT_RECORDS_PROCESSED\", \"counterValue\": 4, \"counterMaxValue\": 4, \"counterMinValue\": 4, \"counterInstanceCount\": 1}, {\"counterName\": \"INPUT_SPLIT_LENGTH_BYTES\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}], \"counterGroupName\": \"TaskCounter_Map_1_INPUT__dummy_table\"}, {\"counters\": [{\"counterName\": \"OUTPUT_BYTES\", \"counterValue\": 58, \"counterMaxValue\": 58, \"counterMinValue\": 58, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_BYTES_PHYSICAL\", \"counterValue\": 86, \"counterMaxValue\": 86, \"counterMinValue\": 86, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_BYTES_WITH_OVERHEAD\", \"counterValue\": 66, \"counterMaxValue\": 66, \"counterMinValue\": 66, \"counterInstanceCount\": 1}, {\"counterName\": \"OUTPUT_RECORDS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}], \"counterGroupName\": \"TaskCounter_Map_1_OUTPUT_Reducer_2\"}, {\"counters\": [{\"counterName\": \"FIRST_EVENT_RECEIVED\", \"counterValue\": 8, \"counterMaxValue\": 8, \"counterMinValue\": 8, \"counterInstanceCount\": 1}, {\"counterName\": \"INPUT_RECORDS_PROCESSED\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"LAST_EVENT_RECEIVED\", \"counterValue\": 8, \"counterMaxValue\": 8, \"counterMinValue\": 8, \"counterInstanceCount\": 1}, {\"counterName\": \"NUM_SHUFFLED_INPUTS\", \"counterValue\": 1, \"counterMaxValue\": 1, \"counterMinValue\": 1, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 62, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES_DECOMPRESSED\", \"counterValue\": 66, \"counterMaxValue\": 66, \"counterMinValue\": 66, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_BYTES_DISK_DIRECT\", \"counterValue\": 62, \"counterMaxValue\": 62, \"counterMinValue\": 62, \"counterInstanceCount\": 1}, {\"counterName\": \"SHUFFLE_PHASE_TIME\", \"counterValue\": 14, \"counterMaxValue\": 14, \"counterMinValue\": 14, \"counterInstanceCount\": 1}], \"counterGroupName\": \"TaskCounter_Reducer_2_INPUT_Map_1\"}, {\"counters\": [{\"counterName\": \"SPECULATIVE_QUEUED_NS\", \"counterValue\": 229038, \"counterMaxValue\": 115367, \"counterMinValue\": 113671, \"counterInstanceCount\": 2}, {\"counterName\": \"SPECULATIVE_RUNNING_NS\", \"counterValue\": 404437250, \"counterMaxValue\": 203208422, \"counterMinValue\": 201228828, \"counterInstanceCount\": 2}], \"counterGroupName\": \"org.apache.hadoop.hive.llap.counters.LlapWmCounters\"}]";
    JsonNode counters = objectMapper.readTree(jsonCounters);
    Map<String, CounterGroup> counterGroupMap = dagFinishedProcessor.getCounterGroupMap((ArrayNode)counters);
    dagFinishedProcessor.updateResourceUtilizationInHiveQuery(counterGroupMap, hiveQuery);
    Assert.assertNull(hiveQuery.getResourceUtilization());
  }
}